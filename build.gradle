plugins {
    id "org.springframework.boot" version "3.1.0"
    id "io.spring.dependency-management" version "1.1.0"
    id "org.jetbrains.kotlin.jvm" version "1.8.21"
    id "org.jetbrains.kotlin.plugin.spring" version "1.8.21"
    id "org.jetbrains.kotlin.plugin.noarg" version "1.9.0"
}

group = "org.example"
version = "1.0-SNAPSHOT"

ext {
    karateVersion = "1.4.1"
}

repositories {
    mavenCentral()
    maven {
        url "https://packages.confluent.io/maven"
    }
}

sourceSets {
    test {
        resources {
            srcDir file("src/test/kotlin")
            exclude "**/*.kotlin"
        }
    }
}

dependencies {
    implementation "org.springframework.boot:spring-boot-starter-web"
    testImplementation "com.mysql:mysql-connector-j"
    testImplementation "io.confluent:kafka-streams-avro-serde:7.4.1"
    testImplementation "org.springframework:spring-jdbc"
    testImplementation "org.apache.kafka:kafka-clients:3.3.1"
    testImplementation "org.springframework.boot:spring-boot-starter-test"
    testImplementation "com.intuit.karate:karate-junit5:$karateVersion"
}

test {
    useJUnitPlatform()
    systemProperty "karate.options", System.properties.getProperty("karate.options")
    systemProperty "karate.env", System.properties.getProperty("karate.env")
    outputs.upToDateWhen { false }
}

task karateDebug(type: JavaExec) {
    classpath = sourceSets.test.runtimeClasspath
    main = "com.intuit.karate.cli.Main"
}

kotlin {
    jvmToolchain(17)
}
